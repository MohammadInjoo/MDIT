#include <CapacitiveSensor.h> //  #include is used to include outside libraries in your sketch. This one is for using capacitive sensors.
#include <Servo.h> // #include is used to include outside libraries in your sketch. This one is for running servo motors.


CapacitiveSensor capSensor1 = CapacitiveSensor(4,2); // Putting a 10Mohm between pin 4 and  2, connect it(2) to Aluminum plate
CapacitiveSensor capSensor2 = CapacitiveSensor(7,5); // Putting a 10Mohm between pin 7 and  5, connect it(5) to a Metal object

Servo myservo; // defining the servo motor as "myservo"
const int trigPin = 12; // trigger pin of the ultrasonic sensor connect  to pin 12
const int echoPin = 13;  // echo pin of the ultrasonic sensor connect  to pin 13
int pos = 0;
int duration = 0;
int distance = 0;

unsigned long oneSecond = 1000UL;
unsigned long startTime;
int mySeconds = 0;
int myMinutes = 0;
int myHours = 0;
int myDays = 0;



void setup()
{
  Serial.begin(9600);
  startTime = millis(); // check on performance in milliseconds

myservo.attach(9); // Servo is attached to pin 9
pinMode(trigPin , OUTPUT); // Ultrasonic sensor trigger pin, sender
pinMode(echoPin , INPUT); // Ultrasonic sensor echo pin, reciever

}

void loop()
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);  
  duration = pulseIn(echoPin, HIGH);
  distance = duration/58.2;
 
  
   if ( distance <= 40 ) //  is true if distance is smaller than or equal to 40cm. 
  {
      for (pos = 0; pos <= 90; pos += 1){
    myservo.write(pos); 
    delay(1000);}
  } // If someone approach the sensor equall or closer than 40cm, the servo motor start from 0position to 90position(angle), and then it will come back to pos0, in 90seconds, each step takes 1 second
 
  
  long sensorValue1 = capSensor1.capacitiveSensor(30);
  long sensorValue2 = capSensor2.capacitiveSensor(30);

    Serial.print("Sensor1: ");
    Serial.print(sensorValue1);
    Serial.print("Sensor2: ");
    Serial.println(sensorValue2);

    int val1 = map(sensorValue1, 0, 5000, 50, 4000);
    int val2 = map(sensorValue2, 0, 10000, 10, 1000);

    tone(8,val1,20); // Generates a square wave of the specified frequency (and 50% duty cycle) on a pin. tone(pin, frequency, duration), 
    noTone; // Stops the generation of a square wave triggered by tone(8,val1,20).
    delay(val2); // stops when approaching to the val2 pin.
    
  if (millis() - startTime >= oneSecond)
  {
    displayTime();
    mySeconds++;
    startTime += oneSecond;
    if (mySeconds > 59)
    {
      myMinutes++;
      mySeconds = 0;
      if (myMinutes > 59)
      {
        myHours++;
        myMinutes=0;
        if (myHours > 23)
        {
          myDays++;
          myHours=0;
        }
      }
    }
  }
  
}

void displayTime()
{
  
  if (myHours < 10) Serial.print("0");
  Serial.print(myHours);
  Serial.print(":");
  if (myMinutes < 10) Serial.print("0");
  Serial.print(myMinutes);
  Serial.print(":");
  if (mySeconds < 10) Serial.print("0");
  Serial.println(mySeconds);
}
